基础
========================================

运行模式
----------------------------------------
Windows支持Intel x86/x64 的两种处理器模式内核模式（Ring 0）和用户模式（Ring 3）。

内核模式下的代码可以访问所有的内存空间；可以直接操纵硬件。用户模式下的代码无权访问系统空间的内存页面；无法直接操纵硬件。用户模式向内核模式的切换是受控制的。

基本模块
----------------------------------------
Windows操作系统内核模式下的基本模块包含Windows执行体、Windows内核体、设备驱动程序、窗口和图形系统、硬件抽象层。

其中Windows执行体是Windows内核体的上层接口，包含了基本的操作系统服务，如进程与线程管理、内存管理、I/O管理、网络连接、进程间通信以及安全服务。

Windows内核体实现与硬件体系结构支持的代码，实现底层的操作系统功能，如线程调度 、中断和异常分发处理、多处理器同步等。

设备驱动程序包括硬件设备驱动程序、文件系统与网络设备驱动程序。

窗口和图形系统即Win32k.sys（Windows子系统的内核模式部分），实现了图形用户界 面（GUI）函数，包括窗口的处理、绘制等。

硬件抽象层即Hal.dll文件，用于屏蔽Windows内核、驱动程序与平台硬件差异性的底 层代码。

系统进程
----------------------------------------
- Idle
    - 每个CPU一个idle线程做空闲CPU时间统计
- System
    - 内核模式的系统进程
- Wininit.ext
    - Session 0 初始化
- Csrss.exe
    - Windows子系统进程，即客户端/服务器运行进程
- Smss.exe
    - 会话（Session）管理器，系统启动时第一个运行的进程
- Winlogon.exe
    - 处理交互式登录
- Services.exe
    - 服务控制管理器，负责启动和、停止、暂停、恢复服务
- Svchost.exe
    - 共享进程服务的宿主进程
- Lsass.exe
    - 本地安全授权子系统，验证用户登录、授权和审计

服务
----------------------------------------
服务（Services）程序是后台运行的进程，常用来执行特定的任务，不需要和用户进行交互。比如自动更新服务、后台智能传输服务、事件日志服务等。

服务程序受Service Control Manager（SCM，即services.exe进程）所控制，其服务程序的配置数据位于 ``HKLM\System\CurrentControlSet\Services`` 。

服务通常由三个部分组成：服务应用、服务控制程序 (service control program, SCP)、服务控制管理器 (service control manager, SCM)。

Windows提供了内置的SCP，可以启动、停止、继续运行程序。用户也可以自定义SCP程序来玩橙更细粒度的控制。服务程序是普通的Windows可执行程序，只是会有一些附加模块和SCM通信。

WMI
----------------------------------------
Windows Management Instrumentation (WMI) 是 Web-Based Enterprise Management (WBEM)的一个实现，用于提供操作界面和对象模式以便访问有关操作系统、设备、应用程序和服务的管理信息。

WMI由4个部分组成，分别为：management applications, WMI infrastructure, providers, and managed objects。

进程与线程
----------------------------------------

进程
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
进程（Process）是一个应用程序运行的实例，包含以下一些基本组件：私有虚拟地址、可执行体程序、被操作系统分配的一份资源句柄（Handles）列表、访问控制令牌（Token）、进程标识号一个或多个线程。

访问控制令牌是用以唯一的标识所有者及其所属组以及和该进程相关联的特权（Privilege）信息。

进程创建步骤分为七步：

- 转换并校验参数和标记
- 打开可执行映像文件（.exe）
- 创建Windows执行体进程对象
- 创建初始线程（栈，上下文和 执行体线程对象等）
- 通知Windows子系统初始化了一个进程
- 开始运行初始线程。（除非进程创建的时候被挂起）
- 在新进程和线程的上下文空间中，完成地址空间的初始化（ 比如加载必需的DLL文件）并开始执行程序

线程
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
线程（Thread）是CPU调度执行的基本单元，其包含CPU状态、两个栈、线程本地存储（TLS）、线程标识号和访问控制令牌。

线程的两个栈分别用于内核模式和用户模式。线程本地存储（TLS）包含一个私有存储空间，用来保存子系统、运行时库以及DLL文件等。

访问控制令牌（Access Token），用以唯一的标识所有者及其所属组以及和该线程相关联的特权（Privilege）信息
